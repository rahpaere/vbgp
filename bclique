#! /bin/sh

zebraconf() {
	echo "password secret"
	echo "enable password secret"
	echo "log file /tmp/vnet$1-zebra.log"
	echo "ip forwarding"

	if test ${dest} -eq $1
	then
		echo "interface lo"
		echo " ip address 192.168.1.1/16"
	fi

	echo "interface vnet${hub}"
	echo " ip address 10.0.1.$1/24"
}

bgpdconf() {
	local i

	echo "password secret"
	echo "enable password secret"
	echo "log file /tmp/vnet$1-bgpd.log"
	echo "debug bgp updates"

	as=`expr 65000 + $1`
	echo "router bgp ${as}"
	echo " bgp router-id 10.0.1.$1"
	echo " bgp graceful-restart"

	if test ${dest} -eq $1
	then
		echo " network 192.168.0.0/16"
		echo " neighbor 10.0.1.1 remote-as 65001"
		echo " neighbor 10.0.1.2 remote-as 65002"
		echo " neighbor 10.0.1.2 route-map backup out"
		echo "route-map backup permit 10"
		printf " set as-path prepend"
		for i in `seq $n`
		do
			printf " ${as}"
		done
		echo
		return
	fi

	for i in `seq $n`
	do
		echo " neighbor 10.0.1.$i remote-as" `expr 65000 + $i`
	done
	if test 2 -ge $1
	then
	        echo " neighbor 10.0.1.${dest} remote-as" `expr 65000 + ${dest}`
	fi
}

case "$1" in

create)
	if test $# != 2 || test $2 -lt 2
	then
		echo Usage: $0 create SIZE
		echo SIZE must be at least 2.
		exit 1
	fi
	n=$2
	dest=`expr $n + 1`
	hub=`expr ${dest} + 1`
	vnet=`dirname $0`/vnet

	$vnet create ${hub}
	for i in `seq ${dest}`
	do
		echo Configuring router $i.
		zebraconf $i >/tmp/vnet$i-zebra.conf
		bgpdconf $i >/tmp/vnet$i-bgpd.conf
		$vnet link $i ${hub}
	done

	echo Configuring hub.
	ssh 10.0.0.${hub} brctl addbr vnetbr
	ssh 10.0.0.${hub} ip address add 10.0.1.${hub} dev vnetbr
	ssh 10.0.0.${hub} ip link set vnetbr up
	for i in `seq ${dest}`
	do
		ssh 10.0.0.${hub} brctl addif vnetbr vnet$i
		ssh 10.0.0.${hub} ip link set vnet$i up
	done
	;;

start)
	if test $# != 2
	then
		echo Usage: $0 start-node SIZE
		exit 1
	fi
	n=$2
	dest=`expr $n + 1`
	hub=`expr ${dest} + 1`

	for i in `seq ${dest}`
	do
		echo Starting router $i.
		ssh -f 10.0.0.$i rtmon -4 file /tmp/vnet$i-rtmon.log route
		ssh 10.0.0.$i /usr/lib/quagga/zebra -d -f /tmp/vnet$i-zebra.conf -i /tmp/vnet$i-zebra.pid
		ssh 10.0.0.$i /usr/lib/quagga/bgpd -d -f /tmp/vnet$i-bgpd.conf -i /tmp/vnet$i-bgpd.pid
	done
	;;

fail)
	echo Killing router 1.
	pkill -f "vnet1-(zebra|bgpd)"
	;;

recover)
	echo Recovering router 1.
	ssh 10.0.0.1 /usr/lib/quagga/zebra -d -f /tmp/vnet1-zebra.conf -i /tmp/vnet1-zebra.pid
	ssh 10.0.0.1 /usr/lib/quagga/bgpd -d -f /tmp/vnet1-bgpd.conf -i /tmp/vnet1-bgpd.pid
	;;

destroy)
	if test $# != 1
	then
		echo Usage: $0 destroy
		exit 1
	fi
	vnet=`dirname $0`/vnet

	$vnet destroy

	echo Cleaning up routers.
	pkill -f vnet
	pkill -f tcpr
	;;

*)
	echo Usage:
	echo "  $0 create        Create a backup-clique BGP network."
	echo "  $0 start         Start the routers."
	echo "  $0 fail          Simulate failure."
	echo "  $0 recover       Simulate recovery."
	echo "  $0 destroy       Destroy the BGP network."
	;;

esac
