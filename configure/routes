#! /bin/sh

DIR=`pwd`
NODES=`cat network/nodes`

if test 2 -gt "$NODES"
then
	echo Network is unconfigured or too small.
	exit 1
fi

: ${NAME:=primary}
: ${NODE:=$NODES}
: ${PEER:=1}
: ${PREFIXES:=1}

mkdir -p routes/$NAME

cat >routes/$NAME/start <<END
#! /bin/sh

mkdir -p run/routes/$NAME
ip netns exec node$NODE env DEBUG_ALL=1 SYSLOG="$DIR"/run/routes/$NAME/exabgp.log PID="$DIR"/run/routes/$NAME/exabgp.pid DAEMONIZE= exabgp "$DIR"/routes/$NAME/exabgp.conf
END
chmod a+x routes/$NAME/start

cat >routes/$NAME/restart <<END
#! /bin/sh

kill -ALRM \`cat "$DIR"/run/routes/$NAME/exabgp.pid\`
END
chmod a+x routes/$NAME/restart

cat >routes/$NAME/stop <<END
#! /bin/sh

kill -INT \`cat "$DIR"/run/routes/$NAME/exabgp.pid\`
END
chmod a+x routes/$NAME/stop

exabgpconf() {
	attributes="next-hop 192.168.1.$NODE"
	if test 1 -ne "$PEER"
	then
		attributes="$attributes as-path ["
		for i in `seq $NODES`
		do
			attributes="$attributes "`expr 65000 + $NODE`
		done
		attributes="$attributes ]"
	fi

	printf "neighbor 192.168.1.$PEER {\n"
	printf "\trouter-id 192.168.1.$NODE;\n"
	printf "\tlocal-address 192.168.1.$NODE;\n"
	printf "\tlocal-as %s;\n" `expr 65000 + $NODE`
	printf "\tpeer-as %s;\n" `expr 65000 + $PEER`
	if test -n "$GRACEFUL"
	then
		printf "\tgraceful-restart 30;\n"
	fi
	printf "\tstatic {\n"
	for i in `seq $PREFIXES`
	do
		a=`expr \( $i / 655356 \) % 256`
		b=`expr \( $i / 256 \) % 256`
		c=`expr $i % 256`
		printf "\t\troute 10.$a.$b.$c/32 $attributes;\n"
	done
	printf "\t}\n"
	printf "}\n"
}

exabgpconf >routes/$NAME/exabgp.conf
