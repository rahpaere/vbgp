#! /bin/sh

zebraconf() {
	echo "password secret"
	echo "enable password secret"
	echo "log file /tmp/vnet$1-zebra.log"
	echo "ip forwarding"

	if test ${dest} -eq $1
	then
		echo "interface lo"
		echo " ip address 192.168.1.1/16"
	fi
}

bgpdconf() {
	local i

	echo "password secret"
	echo "enable password secret"
	echo "log file /tmp/vnet$1-bgpd.log"
	echo "debug bgp updates"

	as=`expr 65000 + $1`
	echo "router bgp ${as}"
	echo " bgp router-id 10.0.0.$1"
	echo " bgp graceful-restart"

	if test ${dest} -eq $1
	then
		echo " network 192.168.0.0/16"
		echo " neighbor 10.0.0.1 remote-as 65001"
		echo " neighbor 10.0.0.2 remote-as 65002"
		echo " neighbor 10.0.0.2 route-map backup out"
		echo "route-map backup permit 10"
		printf " set as-path prepend"
		for i in `seq $n`
		do
			printf " ${as}"
		done
		echo
		return
	fi

	for i in `seq $n`
	do
		if test $i -ne $1
		then
			echo " neighbor 10.0.0.$i remote-as" `expr 65000 + $i`
			echo " neighbor 10.0.0.$i next-hop-self"
		fi
	done
	if test 2 -ge $1
	then
	        echo " neighbor 10.0.0.${dest} remote-as" `expr 65000 + ${dest}`
	fi
}

case "$1" in

create)
	if test $# != 2 || test $2 -lt 2
	then
		echo Usage: $0 create SIZE
		echo SIZE must be at least 2.
		exit 1
	fi
	n=$2
	dest=`expr $n + 1`
	tcpr=`expr ${dest} + 1`
	vnet=`dirname $0`/vnet

	$vnet create ${tcpr}

	echo Setting up TCPR.
	iptables-save >/tmp/vnet-iptables.saved
	iptables -t mangle -A FORWARD -d 10.0.0.${tcpr} -p tcp -j TCPR --peer
	iptables -t mangle -A FORWARD -s 10.0.0.${tcpr} -p tcp -j TCPR
	iptables -t mangle -A FORWARD -s 10.0.0.${tcpr} -p udp -j TCPR

	for i in `seq 2 ${dest}`
	do
		echo Setting up bridge for router $i.
		ssh -f 10.0.0.${tcpr} tcpr-bridge -b `expr 9000 + $i` -t 10.0.0.$i:7777
		ssh 10.0.0.$i iptables -t nat -A OUTPUT -d 10.0.0.1 -p tcp --dport 179 -j DNAT --to-destination 10.0.0.${tcpr}:`expr 9000 + $i`
		ssh 10.0.0.1 iptables -t nat -A OUTPUT -d 10.0.0.$i -p tcp --dport 179 -j DNAT --to-destination 10.0.0.${tcpr}:`expr 9000 + $i`
	done

	for i in `seq ${dest}`
	do
		echo Configuring router $i.
		zebraconf $i >/tmp/vnet$i-zebra.conf
		bgpdconf $i >/tmp/vnet$i-bgpd.conf

		echo Starting router $i.
		ssh -f 10.0.0.$i rtmon -4 file /tmp/vnet$i-rtmon.log route
		ssh 10.0.0.$i /usr/lib/quagga/zebra -d -f /tmp/vnet$i-zebra.conf -i /tmp/vnet$i-zebra.pid
		ssh 10.0.0.$i /usr/lib/quagga/bgpd -d -f /tmp/vnet$i-bgpd.conf -i /tmp/vnet$i-bgpd.pid
	done
	;;

destroy)
	vnet=`dirname $0`/vnet
	$vnet destroy

	echo Cleaning up routers.
	pkill -f vnet

	echo Cleaning up TCPR.
	pkill tcpr-bridge
	iptables-restore </tmp/vnet-iptables.saved
	;;

*)
	echo Usage:
	echo "  $0 create        Create a backup-clique BGP network."
	echo "  $0 destroy       Destroy the BGP network."
	;;

esac
